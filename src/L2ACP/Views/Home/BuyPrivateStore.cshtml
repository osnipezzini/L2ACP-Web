@*
    Copyright (C) 2017  Nick Chapsas
    This program is free software: you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free Software
    Foundation, either version 2 of the License, or (at your option) any later
    version.

    L2ACP is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along with
    this program. If not, see <http://www.gnu.org/licenses/>.
*@
@using L2ACP.Models
@using L2ACP.Services
@using Microsoft.AspNetCore.Mvc.Localization
@inject AssetManager AssetManager
@model TradeItemAcp[]
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Private Stores: Buy"];
}

<div class="wrapper wrapper-content animated fadeIn">
    <div class="table-responsive">
        <h3>@Localizer["These are all the items that people are buying ingame"] @Localizer["Example:"] <img src="/images/privatebuy.png"/></h3>
        <select id="charsSelect" class="form-control m-b" asp-items="new SelectList(ViewBag.CharacterNames)" name="account">
            <option selected="selected" disabled="disabled">@Localizer["Please select a character"]</option>
        </select>
        <input type="text" class="form-control input-sm m-b-xs" id="filter" placeholder="Search">
        <table class="table buystoretable table-striped table-hover"  data-page-size="25" data-filter="#filter">
            <tbody>
            <tr>
                <th>@Localizer["Buyer"]</th>
                <th>@Localizer["Item"]</th>
                <th>@Localizer["Count"]</th>
                <th>@Localizer["Price (Adena)"]</th>
            </tr>
            @foreach (TradeItemAcp item in Model)
            {
                L2Item currentItem = AssetManager.GetItems().FirstOrDefault(x => x.Key == item.ItemId).Value;
                <tr>
                    <td>@item.PlayerName</td>
                    <td><img alt="image" src="/images/gameIcons/@(currentItem.Image).png"> @currentItem.Name @(item.Enchant > 0 ? "+" + item.Enchant : "") <span  style="@(item.Count == 1 ? "display: none": string.Empty  )" class="countwrapper">(<span class="itemcounttext">@item.Count</span>)</span></td>
                    <td><input data-priceforone="@item.Price" type="number" min="1" max="@item.Count" value="1" class="itemcount form-control"/></td>
                    <td><button class="btn btn-primary sellStoreItem" data-buyerid="@item.PlayerId" data-itemobjid="@item.ObjectId" type="button">@item.Price</button></td>
                </tr>
            }

            </tbody>
            <tfoot>
            <tr>
                <td colspan="5" class="footable-visible">
                    <ul class="pagination pull-right"></ul>
                </td>
            </tr>
            </tfoot>
        </table>
    </div>
</div>

@section Scripts{
    <script src="~/js/footable/footable.all.min.js"></script>
    <script>
        $('.buystoretable').footable();

        $('.itemcount').on('input',
            function() {
                var newval = parseInt(removeDots($(this).val()));
                var currentVal = parseInt($(this).attr('data-priceforone'));
                if (newval > parseInt($(this).closest('tr').find('.itemcounttext').text())) {
                    $(this).val($(this).closest('tr').find('.itemcounttext').text());
                }
                if (newval <= 0) {
                    $(this).val(1);
                }
                newval = parseInt($(this).val());
                $(this).closest('tr').find('.sellStoreItem').text(numberWithDots(newval * currentVal));
            });

        $('.sellStoreItem').each(function() {
            $(this).text(numberWithDots(parseInt($(this).text())));
        });

        $('.sellStoreItem').click(function() {
            if ($('#charsSelect').val() == null) {
                toastr["error"]("@Localizer["Please select the char you want to buy with"]");
                return false;
            }

            var objId = $(this).attr('data-itemobjid');
            var buyerId = $(this).attr('data-buyerid');
            var roottr = $(this).closest('tr');
            var count = parseInt(removeDots(roottr.find('.itemcount').val()));
            var playerName = $('#charsSelect').val();

            if (parseInt(removeDots(roottr.find('.itemcounttext').text())) < count) {
                toastr["error"]("Invalid item amount");
                return false;
            }

            $.post("/sellitemprivate", { ObjectId: objId, BuyerId: buyerId, Count: count, SellerName: playerName }, function(data) {
                if (data.startsWith("ok:")) {

                    if ((parseInt(removeDots(roottr.find('.itemcounttext').text())) - count) <= 0) {
                        roottr.remove();
                    } else {
                        var rest = parseInt(removeDots(roottr.find('.itemcounttext').text())) - count;
                        roottr.find('.itemcounttext').text(rest);
                    }
                    toastr["success"]("@Localizer["Successfully sold the item"]");
                } else {
                    toastr["error"](data);
                }
            });

        });
    </script>
}


@section css
{
    <link rel="stylesheet" href="~/css/plugins/footable/footable.core.css" />
}
